% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Heatmap.R
\name{coldata_palettes}
\alias{coldata_palettes}
\title{Converts a coldata data.frame to a color palette.}
\usage{
coldata_palettes(
  Input_Object = NULL,
  brewer.pals = c("Dark2", "Set2"),
  BinaryColorScheme = c("lightgrey", "black"),
  coldata_ids = NULL,
  mode = "all",
  SampleIDs = NULL
)
}
\arguments{
\item{Input_Object}{A data.frame containing factors or a hotgenes object.}

\item{brewer.pals}{A vector of strings indicating the desired RColorBrewer
palettes to use. See \link[RColorBrewer]{brewer.pal}.
Default is set to "Dark2", "Set2". Multiple maybe used.}

\item{BinaryColorScheme}{A vector of strings to for binary levels.
The default is set to "lightgrey","black". If NULL, two colors will
be assigned.}

\item{coldata_ids}{Variable(s) stored in coldata slot can be selected
by column name, using a vector strings. Default is \code{\link[=coldata_names]{coldata_names()}}. If
set to "", an empty data.frame is returned.}

\item{mode}{string indicating the type of coldata to call.
Choices include: "all", "quanti", "quali". If "all", the
default, all columns will be returned. If "quanti", only
numeric coldata will be returned. If "quali", only
qualitative coldata will be returned.}

\item{SampleIDs}{vector of sample ids to select}
}
\description{
Converts a coldata data.frame to a color palette.
}
\examples{
require(Hotgenes)

df_mtcars <- mtcars \%>\%
  dplyr::mutate(dplyr::across(c(
    "gear", "carb",
    "vs", "cyl", "am"
  ), as.factor))
df_mtcars

# get factors
df_anno <- dplyr::select_if(df_mtcars, is.factor)
df_anno

# make palette
color_pal <- coldata_palettes(df_mtcars)

df_mtcars \%>\%
  dplyr::select_if(is.numeric) \%>\%
  pheatmap::pheatmap(
    scale = "column",
    annotation_colors = color_pal,
    annotation_row = df_anno,
    border_color = "white"
  )
}
