% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Shiny_support_utilities.R
\name{UI_download_plot}
\alias{UI_download_plot}
\alias{Server_download_plot}
\alias{UI_interactive_plot}
\alias{Server_interactive_plot}
\title{shiny plot download handler}
\usage{
UI_download_plot(id = NULL, label = "PDF")

Server_download_plot(
  id = NULL,
  reactive_plot = NULL,
  filename = "Figure",
  extension = ".pdf",
  units = "in",
  input,
  output,
  session,
  width = 10,
  height = 8,
  ...
)

UI_interactive_plot(id, width = "100\%", height = "400px", ...)

Server_interactive_plot(
  id,
  input,
  output,
  session,
  refine_cols = NULL,
  reactive_plot = NULL,
  xvar = reactive(NULL),
  yvar = reactive(NULL),
  execOnResize = FALSE
)
}
\arguments{
\item{id}{An ID string that corresponds with the ID used to call the module's
UI function.}

\item{label}{The label that should appear on the button.}

\item{reactive_plot}{a reactive ggplot object.}

\item{filename}{string for file name without extension.
Default is"Figure"}

\item{extension}{string for file extension. Default is".png"}

\item{units}{One of the following units in which the \code{width} and \code{height}
arguments are expressed: \code{"in"}, \code{"cm"}, \code{"mm"} or \code{"px"}.}

\item{input}{shiny server input parameter}

\item{output}{shiny server output parameter}

\item{session}{Session from which to make a child scope (the default should
almost always be used).}

\item{width, height}{Plot size in units expressed by the \code{units} argument.
If not supplied, uses the size of the current graphics device.}

\item{...}{additional arguments for \code{\link[shiny]{plotOutput}}}

\item{refine_cols}{string indicating which columns
to show. If NULL (default), all cols will be shown.}

\item{xvar, yvar}{A string giving the name of the variable on the x or y axis.
These are only required for base graphics, and must be the name of
a column in \code{df}.}

\item{execOnResize}{If \code{FALSE} (the default), then when a plot is
resized, Shiny will \emph{replay} the plot drawing commands with
\code{\link[grDevices:recordplot]{grDevices::replayPlot()}} instead of re-executing \code{expr}.
This can result in faster plot redrawing, but there may be rare cases where
it is undesirable. If you encounter problems when resizing a plot, you can
have Shiny re-execute the code on resize by setting this to \code{TRUE}.}
}
\description{
shiny plot download handler

shiny plot download handler

interactive plot modules

interactive plot modules
}
