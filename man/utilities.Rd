% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Feature_Alias_support.R, R/Utilities.R
\name{parse_features}
\alias{parse_features}
\alias{utilities}
\alias{DE}
\alias{DEPlot}
\alias{DECoefs}
\alias{DExps}
\alias{BoxPlot}
\title{Returns a named list showing where the features are found}
\usage{
parse_features(Hotgenes = NULL, features = NULL)

DE(
  Hotgenes = NULL,
  contrasts = NULL,
  mapFeatures = TRUE,
  hotList = NULL,
  Report = "Details",
  padj_cut = 0.1,
  .log2FoldChange = 0,
  Topn = Inf,
  signif_ = NULL,
  Rank_name = "Feature",
  annotateSig = TRUE
)

DEPlot(
  Hotgenes = NULL,
  contrasts = NULL,
  padj_cut = 0.1,
  .log2FoldChange = 0,
  ncol = NULL,
  hotList = NULL
)

DECoefs(
  Hotgenes = NULL,
  hotList = NULL,
  contrasts = NULL,
  coef_ids = c("log2FoldChange", "stat"),
  .baseMean = NULL,
  padj_cut = 0.1,
  .log2FoldChange = 0,
  Topn = Inf,
  split_names = FALSE
)

DExps(
  Hotgenes = NULL,
  ExpressionSlots = NULL,
  SampleIDs = NULL,
  hotList = NULL,
  aux_features = "",
  contrasts = NULL,
  padj_cut = 0.1,
  .log2FoldChange = 0,
  Topn = Inf,
  Query_set = FALSE,
  Q = FALSE,
  coldata_ids = coldata_names(Hotgenes)
)

BoxPlot(
  Hotgenes = NULL,
  ExpressionSlots = NULL,
  SampleIDs = NULL,
  fillby = NULL,
  coef = 1.5
)
}
\arguments{
\item{Hotgenes}{Hotgenes object.}

\item{features}{strings to check}

\item{contrasts}{vector for DE data.frames in Output_DE slot to return.
See ?contrasts_. If NULL (default), all contrasts used.}

\item{mapFeatures}{If FALSE, no changes will be made. If TRUE (default),
features will be mapped to information provided in the mapper slot.
See details below and  \code{\link[Hotgenes]{Mapper_}}.}

\item{hotList}{vector of Features to select. This will overide
all cut offs.}

\item{Report}{vector indicating the details to return.
Options include,
Details (Complete DE details per contrast),
Features (Feature column of DE details as a vector),
contrast_dir (Feature column of DE details as a vector) named by contrast_dir,
Length (Number Feature per contrast),
Ranks (named vector with feature-level statistics for GSEA),
FC (Features with log2FoldChange)}

\item{padj_cut}{numeric value for padj limit (0.1 is Default).}

\item{.log2FoldChange}{absolute log2FoldChange for filtering.
Default is 0.}

\item{Topn}{numeric value for the maximum number of DEGs to show.
Arranged by padj. Default is Inf for all available DEGs.}

\item{signif_}{integer indicating the number of significant digits (signif)
to be used. If NULL (NULL), original values returned.}

\item{Rank_name}{String matching a column name returned by
Mapper_ function, default is "Feature". This parameter is only valid when
Report = "Ranks" or "FC" and mapFeatures = TRUE.}

\item{annotateSig}{logical, if TRUE (default), a column is added
to show significance for any hotList feature (based on cut offs).}

\item{ncol}{integer to specific the number of columns to pass to
\code{\link[ggplot2]{facet_wrap}}. Valid only when hotList != NULL.}

\item{coef_ids}{vector of coefficients to be returned per contrast.
Options include, "log2FoldChange", "stat", "baseMean".}

\item{.baseMean}{string indicating the name of the baseMean column.
If "NULL" the default, the baseMean will not be returned. Options
include "baseMean" or "AveExpr". "AveExpr" is for older Hotgenes objects.}

\item{split_names}{Logical, if FALSE (default), contrast and coefficient
label will be separated by "_". If TRUE, strings will be split onto two
rows.}

\item{ExpressionSlots}{name of normalized data to use.
If NULL (default), the first name returned by ExpressionSlots_
will be used.
See HotgenesObj.}

\item{SampleIDs}{vector of sample ids to select}

\item{aux_features}{vector of strings. Options include
any value returned by auxiliary_assays_features() function. If provided,
corresponding auxiliary_assays values will be returned along with
expression data. If "" (default) no auxiliary_assays data will be included.
Query_set must be TRUE.}

\item{Query_set}{if FALSE (Default), expression data
returned, with rows are genes and columns as Samples. If TRUE,
the data are transposed and merged with coldata data. This is
suitable for ggplots or linear regression analysis.}

\item{Q}{Logical, if TRUE complete expression data returned.
Overrides contrast selection. Default is FALSE.}

\item{coldata_ids}{Variable(s) stored in coldata slot can be selected
by column name, using a vector strings. Default is \code{\link[=coldata_names]{coldata_names()}}. If
set to "", an empty data.frame is returned.}

\item{fillby}{string indicating the variable for setting
fill, default is NULL. Options include any variable returned by
the coldata_ function.}

\item{coef}{this determines how far the plot \sQuote{whiskers} extend out
    from the box.  If \code{coef} is positive, the whiskers extend to the
    most extreme data point which is no more than \code{coef} times
    the length of the box away from the box. A value of zero causes
    the whiskers
    to extend to the data extremes (and no outliers be returned).}
}
\description{
`DE()`, `DEPlot()`, `DECoefs()`, and `DExps()` are used
to review DE details, generate summary plots,
get DE coefficients, or get expression data.

`BoxPlot()` generates a box plot for expression data
}
\details{
Hotgenes object utilities

By default, DE results are sorted by padj (increasing). Filtering by padj
or log2FoldChange only applies when hotList = NULL.

If a hotList is provided, details for all matched Features will be returned.
An additional column named "significant" is added to highlight features that
show significant differences for the given condition. Threshold for this can be
set by the "padj_cut" and ".log2FoldChange" arguments.

When calling "Ranks" features are sorted (descending) by the "stats"
column (see Hotgenes class). When mapFeatures = TRUE and Rank_name
is not set to "Feature", due to mapping issues, non-unique names
may be produced. In this case, the rank with the highest absolute
value is returned via \code{\link[dplyr]{slice_max}}, with Rank_name
set as group.

The dataframe supplied to mapFeatures must contain a "Feature" column,
which will be used for mapping to results. When Report is set to "FC"
the first column will be set by Rank_name argument (default is "Feature"),
followed by "log2FoldChange", and then the remaining columns of returned
by Mapper_ function.

If hotList = NULL, total DE counts will be presented in
a plot. However, if hotList != NULL, a plot showing the
-log10(padj) value for corresponding Feature will be shown. A horizontal
line will represent the selected -log10(padj_cut).

Features may be selected by contrast, log2FoldChange,
and/or adjusted palue. Alternatively, features may be selected by name
via the "hotList" parameter, which overrides other parameters.

With the exception of "baseMean", coefficents will be returned for each
contrast. The parameter "baseMean", is the average expression of a given feature
across samples.
}
\examples{
if(interactive()) {
  # load package
  library(Hotgenes)
  
  fit_Hotgenes_dir <- system.file(
    "extdata",
    paste0("fit_Hotgenes", ".RDS"),
    package = "Hotgenes",
    mustWork = TRUE
  )
  
  # from limma
  fit_Hotgenes <- readRDS(fit_Hotgenes_dir)
  
  # object summary on call
  fit_Hotgenes
  
  
  # list available data
  ExpressionSlots_(fit_Hotgenes)
  
  # View plot
  
  BoxPlot(fit_Hotgenes, SampleIDs = SampleIDs_(fit_Hotgenes)[1:6])
  
  # DE related utilities ----------------------------------------------------
  
  # summarize across contrasts
  fit_Hotgenes \%>\% DEPlot()
  
  # check genes of interest
  genesOfinterest <- c("IL6", "CSF2")
  
  fit_Hotgenes \%>\%
    DEPlot(hotList = genesOfinterest)
  
  # genes of interest
  fit_Hotgenes \%>\%
    DE(Report = "Details",
       hotList = genesOfinterest)
  
  # expression data merged with coldata
  DExps(
    fit_Hotgenes,
    hotList = genesOfinterest,
    coldata_ids = c("Hrs", "sh"),
    Query_set = TRUE
  ) \%>\% head()
  
  # Explore all DEGs --------------------------------------------------------
  
  fit_Hotgenes \%>\%
    DE(Report = "Details")
  
  # Export Ranks for GSEA
  fit_Hotgenes \%>\%
    DE(Report = "Ranks")
  
  # or FC
  fit_Hotgenes \%>\%
    DE(Report = "FC")
  
  # DECoefs ---------------------------------------------
  DECoefs(fit_Hotgenes, hotList = genesOfinterest)
  
}
}
